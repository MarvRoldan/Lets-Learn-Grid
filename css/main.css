/* Let's try CSS3 Grid! */
/* Check out this great guide: https://css-tricks.com/snippets/css/complete-guide-grid/ */

* { /* Basic default browser style reset. */
    font-size: 16px;
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

/* We need a grid container, to contain our grid items! */
#css-grid {
    display: grid;
    grid-template-columns: 
        20% /* Column 1 */
        20% /* Column 2 */
        15% /* Column 3 */
        15% /* Column 4 */
        30%; /* Column 5 */
    grid-template-rows: /* View Height = "vh" */
        20vh /* Row 1 */
        20vh /* Row 2 */
        25vh /* Row 3 */
        25vh /* Row 4 */
        10vh; /* Row 5 */
}

/* Border so we can see our rows / columns. */
#css-grid > * {
    border: 2px dashed darkgray;
}

#navigation {
    grid-column-start: 2;
    grid-column-end: span 3; /* Span is how many cells to take up! */
    grid-row-start: 1;
    grid-row-end: 1;
}

#sidebar {
    grid-column-start: 1;
    grid-column-end: 1;
    grid-row-start: 2;
    grid-row-end: span 3; /* Span is how many cells to take up! */
}

#hero {
    grid-column: 2 / span 4; /* Short hand. 2 = "Start" / span 4 ="End" */
    grid-row: 2;
}

#content-1,
#content-2,
#content-3 {
    grid-row: 3;
}

/* We don't have to have to say #content-1 and #content-3 column, because bu default they are going to take up 1 cell/column */

#content-2 {
    grid-column: 3 / span 2;
}

#big-content-1,
#big-content-2 {
    grid-column: span 2; /* By default, they take up one cell/row, so we did not specify row! */
}

#link {
    grid-column: span 2;
}